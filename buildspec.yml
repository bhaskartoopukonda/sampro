version: 0.2
phases:
  install:
    runtime-versions:
       nodejs: $runtimeVersion
  build:
    commands:
      - echo Build started on `date`
      - pip install --upgrade pip
      - pip install pipenv --user
      - pip install awscli aws-sam-cli
      #- sam package --template-file $samTemplate --s3-bucket $s3ArtifactBucketName --output-template-file $packagedTemplate
      - echo "XXXXXXXXXXXXXXXX CloudFormation packaging..."
      - sam package --template-file $samTemplate --s3-bucket $s3ArtifactBucketName --output-template-file ${deplenv}-${packagedTemplate} staging-${packagedTemplate} dev-${packagedTemplate}
      - echo "XXXXXXXXXXXXXXX CloudFormation packaging.. DONE."
     
  post_build:
    commands:
      - echo "YYYYYYYYYYYYYYYY CloudFormation deploying...$deplenv" 
    #  - sam deploy --template-file ${deplenv}-${packagedTemplate} --stack-name ${deplenv}-stack-sam --region us-east-1 --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND 
      - sam deploy --template-file ${deplenv}-${packagedTemplate} --stack-name ${deplenv}-stack-sam --region us-east-1 --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND --parameter-override Stage=${deplenv} 
      - sam deploy --template-file dev-${packagedTemplate} --stack-name dev-stack-sam --region us-east-2 --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND --parameter-override Stage=dev 
      - sam deploy --template-file staging-${packagedTemplate} --stack-name staging-stack-sam --region us-west-1 --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND --parameter-override Stage=staging 
    
      - echo "YYYYYYYYYYYYYYYY CloudFormation deployment.DONE For..$deplenv" 
artifacts:
  #type: zip
  files:
    - $samTemplate
    - ${deplenv}-$packagedTemplate
    - dev-$packagedTemplate
    - staging-$packagedTemplate
    #- deploy.sh 
  discard-paths: yes  
#version: 0.2
#phases:
  #install:
    #runtime-versions:
       #nodejs: $runtimeVersion
  #build:
    #commands:
      #- echo Build started on `date`
      #- pip install --upgrade pip
      #- pip install pipenv --user
      #- pip install awscli aws-sam-cli
 #     - sam package --template-file template.yaml --s3-bucket s3ArtifactBucketName --output-template-file packaged.yaml
      #- sam package --template-file $samTemplateName --s3-bucket $s3ArtifactBucketName --output-template-file $packagedTemplateName
  #post_build:
    #commands:
      #- echo Build completed on `date`
#artifacts:
  #type: zip
  #files:
    #- '**/*'
  #discard-paths: yes
