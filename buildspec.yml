version: 0.2
phases:
  install:
    runtime-versions:
       nodejs: 10
  pre_build:
    commands:
      - echo Pre-Build Installations started on `date`
      - pip install --upgrade pip
      - pip install pipenv --user
      - pip install awscli aws-sam-cli
      - echo Pre-Build Installations Finished on `date`
  build:
    commands:
      - echo Build started on `date`  
   
      - appPrefix="SAM_"  
        
      - appVersion=$(cat version.txt )      
        
      - timestamp=$(date -u '+%Y-%m-%d_%H-%M-%S_%Z')  
  
      - buildID=$(echo $CODEBUILD_BUILD_ID | awk -F':' '{print $2}')  
  
      - srcVer=$CODEBUILD_SOURCE_VERSION  
  
      - echo $CODEBUILD_SOURCE_VERSION  
     
      - indx=$(echo $CODEBUILD_SOURCE_VERSION | grep -q ^arn ; echo $?)  
  
      - |  
  
        if [ "$indx" -eq 0 ]; then  
  
          srcVer=$CODEBUILD_RESOLVED_SOURCE_VERSION  
  
        fi  
  
      - artifactversion=$(echo $appPrefix$appVersion.$buildID.$srcVer.$timestamp)  
      - buildversion=$(echo $appVersion.$buildID.$srcVer.$timestamp)  
        
      - artifactname=$(echo $artifactversion.tar.gz)  
      
      - echo "CloudFormation packaging..."
      - sam package --template-file template.yaml --s3-bucket abl --output-template-file output.yaml --s3-bucket abl #--parameters { FunctionNameSuffix : ${deplenv} }
     
      - touch version.html  
  
      - echo "$buildversion"> version.html  
        
      - tar -zcvf $artifactname * 
      #- echo 'CODEBUILD_SOURCE_VERSION::::'  $CODEBUILD_SOURCE_VERSION 
      #- echo 'CODEBUILD_RESOLVED_SOURCE_VERSION :::::' $CODEBUILD_RESOLVED_SOURCE_VERSION
      #- echo 'Artifact name :::::'  $artifactname
      #- echo Copy artifact file to S3  
      - aws s3 cp $artifactname s3://$s3ArtifactBucketName
    finally:
                  - |
                    if [ "$buildExitCode" -ne 0 ]; then
                      badge_status=failing
                      badge_colour=red
                    else
                      badge_status=passing
                      badge_colour=green
                    fi
                  #- curl -s "https://codebuild.us-east-1.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoibjVYcjR0c3ZEajNZWUM5UUJFZldybDFyK0dwRmZXbk5JQUZlR3MvT3dBcDluSFlRQVlKODBLeDU0RENJejZXdU83OUFvdHBRejVDa0ZtTkdreG05WnQ0PSIsIml2UGFyYW1ldGVyU3BlYyI6IndDeERPb2ZXUEpBalQwWm0iLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&branch=${GithubBranch}" > ${GithubBranch}-build.svg
                   - curl -s "https://img.shields.io/badge/Build-$badge_status-$badge_colour.svg" > ${GithubBranch}-build.svg
                  #- aws s3 cp ${GithubBranch}-build.svg s3://${s3-bucket}/badges/${GithubBranch}-build.svg --acl public-read --cache-control no-cache  
  
  post_build:
    commands:
      
      - echo "CloudFormation deploying...$deplenv" 
      #- sam deploy --template-file output.yaml --stack-name Abl-Notification-Pipeline-Uat --region us-east-1 --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND #--parameter-override  ParameterKey=FunctionNameSuffix,ParameterValue=${deplenv} 
      - echo "YYYYYYYYYYYYYYYY CloudFormation deployment.DONE For..${deplenv}" 

artifacts:
  files:
    - version.html
    - env.txt 
    - output.yaml
    - $samTemplate
    - $packagedTemplate
  discard-paths: yes  
